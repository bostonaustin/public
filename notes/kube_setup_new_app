###

GOTO -- https://devcloud.swcoe.ge.com/devspace/display/ZJSGD/HOW-TO+-+Creating+a+Kubernetes+Service

###

$ knife node list | grep vault

1.) knife vault create kubernetes blah-dev

    check. knife vault show kubernetes
           > blah-dev

2.) knife upload data_bags/kubernetes/blah-dev.json
    knife upload data_bags/kubernetes/blah-dev_keys.json

3.) always_update -- AFTER A CHANGE or it gets steam-rolled ***
        knife vault update kubernetes blah-dev -A "kubernetes, jenkins, 212599351, 212636162"

        knife vault update kubernetes mytechassistant-dev -A "kubernetes, jenkins, 212599351, 212636162"
        knife vault update kubernetes mytechassistant-stage -A "kubernetes, jenkins, 212599351, 212636162"
        knife vault update kubernetes mytechassistant-prod -A "kubernetes, jenkins, 212599351, 212636162"

        knife vault update kubernetes speedtcon-dev -A "kubernetes, jenkins, 212599351, 212636162"
        knife vault update kubernetes speedtcon-stage -A "kubernetes, jenkins, 212599351, 212636162"
        knife vault update kubernetes speedtcon-prod -A "kubernetes, jenkins, 212599351, 212636162"

        knife vault update kubernetes piwik-dev -A "kubernetes, jenkins, 212599351, 212636162"
        knife vault update kubernetes piwik-stage -A "kubernetes, jenkins, 212599351, 212636162"
        knife vault update kubernetes piwik-prod -A "kubernetes, jenkins, 212599351, 212636162"
    
4.) got_secrets?
    knife vault edit kubernetes piwik-dev

        {
          "secret": "value"                             # volume location or hidden file

          "logs": "/logs"
        }

5.) setup CI/CD pipeline


!ERROR! -- CHEF CONSOLE unable to create a role -- invalid permissions

    https://chef.cloud.corporate.ge.com/organizations/techsoldevops/

    export EDITOR=vi
    knife vault create kubernetes piwik-dev
        backout -- knife vault delete kubernetes mytechassistant
        check -- ls -lah data_bags/kubernetes/pi*

    knife upload data_bags/kubernetes/piwik-dev.json
    knife upload data_bags/kubernetes/piwik-dev_keys.json

    knife vault update kubernetes mytechassistant-dev -A "kubernetes, jenkins, 212599351, 212636162"
    knife upload data_bags/kubernetes/piwik-dev_keys.json
    knife vault edit kubernetes piwik-dev


kubectl run busybox --image=busybox --restart=Never --tty -i --generator=run-pod/v1 --env "POD_IP=$(kubectl get pod nginx -o go-template='{{.status.podIP}}')"


## DEMO LOCALLY
# kubectl run hello-world --replicas=5 --labels="run=load-balancer-example" --image=gcr.io/google-samples/node-hello:1.0  --port=8080
# kubectl get deployments hello-world
# kubectl describe deployments hello-world
# kubectl get replicasets
# kubectl describe replicasets
# kubectl expose deployment hello-world --type=LoadBalancer --name=my-service
# kubectl get services my-service
# kubectl describe services my-service
# kubectl get pods --output=wide
# curl http://<external-ip>:<port>
RUN LOCALLY -- $ minikube service my-service
CLEAN UP
# kubectl delete services my-service
# kubectl delete deployment hello-world

## nextgen frontend
http://10.152.10.192:8080/

[root@geixmaster ge-search-ui]# cat ge-search-ui.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ge-search-ui
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ge-search-ui
    spec:
      volumes:
         - name: logs
           hostPath:
             path: /logs/
         - name: secret
           configMap:
             name: ge-search-ui-map
      containers:
      - name: ge-search-ui
        image: registry.cloud.corporate.ge.com/ge-search-ui:15
        env:
        ports:
        - containerPort: 3002
        volumeMounts:
           - name: logs
             mountPath: /logs/
           - name: secret
             mountPath:  /tmp/npmrc
             subPath: npmrc
      imagePullSecrets:
      - name: regsecret
      nodeSelector:
        nodet: app

[root@geixmaster ge-search-ui]# cat ge-search-ui-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: ge-search-ui
  labels:
spec:
  selector:
    app: ge-search-ui
  ports:
  - name: app
    protocol: "TCP"
    port: 3002
    targetPort: 3000
    nodePort: 8598
  type: NodePort


###   ~/.chef/knife.rb

<<< knife.rb settings >>>
node_name                '212636162'
client_key               '/Users/austinmatthews/.chef/212636162.pem'
validation_client_name   'chef-validator'
validation_key           '/etc/chef-server/chef-validator.pem'
chef_server_url          'https://chef.cloud.corporate.ge.com/organizations/techsoldevops/'
syntax_check_cache_path  '/Users/austinmatthews/.chef/syntax_check_cache'
cookbook_path            '/Users/austinmatthews/git/cloud/aws-chef/vault-chef-repo/cookbooks'
databag_path             '/Users/austinmatthews/git/cloud/aws-chef/vault-chef-repo/data_bags'

knife ssh_key:
"212636162": "fNiOj8DRybU2bEJMsemZLfCMBpRWH3laQps4ZXeLRTntEywn/EVrFQ3PihB8\nbaVaM6zTWPxnRsF04G3s13NsXfPqJpV6mYaIBy17acoIjG/GlJYvKNB5SL9B\n6yuiiJC1Bw3HDew1yoG4wGo29vtHtwVmlmiq+c8zXdS4Lp8hLjBSjSyRLcak\n1x0xz5987eLsIEdHUoywaptn0MSVq6laIQZeH3NAK8oibpcphAp+3RIuMyA+\nG/nrDwzjtdNiWt9OukfhSzbe2a7C17rXSChvTaklPap1sitDo1UMMBPvUXB4\nFZ7L4agGVHF9l9hRK9lt7gYb6u2Nd1tvurNfQfFXmw==\n",
"212636162": "mLzJjwHJKmv1RfYd/dN3pZ/MaJaVfJh/GbKKjX58TkfBkOO5TUJneBJOrVHs\nG04t+0q5jMSQ4sZQlSB3ZBk8O17xG5k18Hy9sX4PzNTLYX9tb+qGJ9jLN3+M\nWQl3Jqj8LahkTvKol3Ib8h2u6dNH6qfsCK3knERPKUU6YLvg1dfDUpmMGQf5\nDNKzmiLxc6ffNfBpgrZLTPoORsEp2kIW2djZXslOMqRi4N0eAYVK/5GdWmur\ntdAGvkB/Ibz1PylqNoaqmCGHMtgAjfPsF4s1fKu9gnLruYXq2t25nBicBUkI\nhmakWGDBQCXp+7w8y66sgGU5Rdbu9qxKzxyb2yJnGw==\n",


kubernetes/.chef/knife.rb
    current_dir = File.dirname(__FILE__)
    home_dir    = ENV['HOME'] || ENV['USERPROFILE']
    knife_override = "#{home_dir}/.chef/knife_override.rb"
    chef_server_url          "https://chef.cloud.corporate.ge.com/organizations/techsoldevops"
    log_level                :info
    log_location             STDOUT
    node_name                ( ENV['USER'] || ENV['USERNAME'] ).downcase
    client_key               "#{home_dir}/.chef/#{node_name}.pem"
    cookbook_path            ["#{current_dir}/../cookbooks"]
    cookbook_copyright       "GE Corporate Infra"
    cookbook_license         "All rights reserved"
    cookbook_email           "techsol.devops@ge.com"
    # Allow overriding values in this knife.rb
    Chef::Config.from_file(knife_override) if File.exist?(knife_override)


~/.chef/knife.rb
    current_dir = File.dirname(__FILE__)
    log_level :info
    log_location STDOUT
    node_name "212636162"
    client_key "#{current_dir}/#{node_name}.pem"
    validation_client_name "techsoldevops-validator"
    validation_key "#{current_dir}/validation.pem"
    chef_server_url "https://chef.cloud.corporate.ge.com/organizations/techsoldevops"
    cookbook_path ["#{current_dir}/../cookbooks"]


~/.chef/knife_override.rb
    home_dir = ENV['HOME'] || ENV['USERPROFILE']
    node_name  "212636162"
    client_key "/Users/austinmatthews/.chef/#{node_name}.pem"
